/* Author = ANIK MITRA */
/* Language = JAVA */
/* Address = Kolkata,WB,INDIA (221716)*/

/******************************************************************************************************************************************/
/***********Start****************/
public static int[] implementMergeSort(int arr[], int start, int end)
    {
        // Your code here
       // You can have your own function where you will use 
      // start and end position for divide purpose 
      if(start<end)
      {
        int mid = (end+start)/2;
        implementMergeSort(arr,start,mid);
        implementMergeSort(arr,mid+1,end);
        merge(arr,start,mid,end);
      } 
      return arr;
    }
    static void merge(int[] arr,int start,int mid,int end)
    {
      int n1=mid-start+1;
      int n2=end-mid;

      int L[] = new int [n1];
      int R[] = new int [n2];

      for(int i=0;i<n1;++i)
          L[i] = arr[start + i];
      for (int j=0;j<n2;++j)
          R[j] = arr[mid + 1 + j];

      int i = 0, j=0;
      int k= start;
      while(i<n1 && j<n2)
      {
        if(L[i] <= R[j])
        {
          arr[k] = L[i];
          i++;
        }
        else
        {
          arr[k] = R[j];
          j++;
        }
        k++;
      } 
      while(i<n1)
      {
        arr[k] = L[i];
        i++;
        k++;
      }
      while(j<n2)
      {
        arr[k] = R[j];
        j++;
        k++;
      }


    }
    /******************************************************************************************************************************************/
/***********End****************/
    
